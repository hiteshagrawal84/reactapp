{"ast":null,"code":"var _jsxFileName = \"/var/www/html/firstreactapp/my-app/src/App.js\";\nimport React, { Component } from 'react';\nimport Student from './Student';\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      isLoaded: false\n    };\n  }\n\n  componentDidMount() {\n    axios.get('https://jsonplaceholder.typicode.com/users').then(response => {\n      this.setState({\n        isLoaded: true,\n        items: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n    axios.get('https://jsonplaceholder.typicode.com/users').then(res => res.json()).then(json => {\n      this.setState({\n        isLoaded: true,\n        items: json\n      });\n    });\n  }\n\n  render() {\n    var _this$state = this.state,\n        isLoaded = _this$state.isLoaded,\n        items = _this$state.items;\n\n    if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Data Loading..\");\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, items.map(item => React.createElement(\"li\", {\n        key: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, item.name, \" | \", item.email)), \";\"));\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/var/www/html/firstreactapp/my-app/src/App.js"],"names":["React","Component","Student","axios","App","constructor","props","state","items","isLoaded","componentDidMount","get","then","response","setState","data","catch","error","console","log","res","json","render","map","item","id","name","email"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAE1BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAGlBP,IAAAA,KAAK,CAACQ,GAAN,CAAU,4CAAV,EACGC,IADH,CACQC,QAAQ,IAAI;AAChB,WAAKC,QAAL,CAAc;AACZL,QAAAA,QAAQ,EAAC,IADG;AAEZD,QAAAA,KAAK,EAAEK,QAAQ,CAACE;AAFJ,OAAd;AAID,KANH,EAOGC,KAPH,CAOS,UAAUC,KAAV,EAAiB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KATH;AAWAd,IAAAA,KAAK,CAACQ,GAAN,CAAU,4CAAV,EACGC,IADH,CACQQ,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGT,IAFH,CAEQS,IAAI,IAAI;AACZ,WAAKP,QAAL,CAAc;AACZL,QAAAA,QAAQ,EAAC,IADG;AAEZD,QAAAA,KAAK,EAAEa;AAFK,OAAd;AAID,KAPH;AAUD;;AAEDC,EAAAA,MAAM,GAAG;AAAA,sBAEiB,KAAKf,KAFtB;AAAA,QAEFE,QAFE,eAEFA,QAFE;AAAA,QAEQD,KAFR,eAEQA,KAFR;;AAIP,QAAG,CAACC,QAAJ,EAAc;AACX,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAP;AACF,KAFD,MAEO;AACL,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACCD,KAAK,CAACe,GAAN,CAAUC,IAAI,IACX;AAAI,QAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmBD,IAAI,CAACE,IAAxB,SAAiCF,IAAI,CAACG,KAAtC,CADH,CADD,MADJ,CADF;AAcD;AAKF;;AA/DyB;;AAmE5B,eAAevB,GAAf","sourcesContent":["import React,{Component} from 'react';\nimport Student from './Student';\nimport axios from 'axios';\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      items :[],\n      isLoaded: false\n    };\n  }\n\n  componentDidMount() {\n\n\n    axios.get('https://jsonplaceholder.typicode.com/users')\n      .then(response => {\n        this.setState({\n          isLoaded:true,\n          items: response.data\n        }) \n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n\n    axios.get('https://jsonplaceholder.typicode.com/users')    \n      .then(res => res.json())\n      .then(json => {\n        this.setState({\n          isLoaded:true,\n          items: json\n        }) \n      })\n\n\n  }\n\n  render() {\n\n    var {isLoaded, items} = this.state;\n\n    if(!isLoaded) {\n       return <div>Data Loading..</div>;\n    } else {\n      return (\n        <div>\n            <ul>\n            {items.map(item => (\n                <li key={item.id}>{item.name} | {item.email}</li>\n\n            ))};\n\n            </ul>\n\n\n        </div>\n      );\n\n    }\n\n\n    \n\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}