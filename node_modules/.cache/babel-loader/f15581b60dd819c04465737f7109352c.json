{"ast":null,"code":"var _jsxFileName = \"/var/www/html/firstreactapp/my-app/src/ItemsList.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Item from './Item';\nexport default class ItemsList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      isLoaded: false\n    };\n  }\n\n  componentDidMount() {\n    let config = {\n      headers: {\n        'Authorization': 'Bearer: 456645412 '\n      }\n    };\n    axios.get('http://jsonplaceholder.typicode.com/users', config).then(response => {\n      this.setState({\n        isLoaded: true,\n        items: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  render() {\n    var _this$state = this.state,\n        isLoaded = _this$state.isLoaded,\n        items = _this$state.items;\n\n    if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Data Loading..\");\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, items.map(item => React.createElement(Item, {\n        key: item.id,\n        item: item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })), \";\"));\n    }\n  }\n\n}","map":{"version":3,"sources":["/var/www/html/firstreactapp/my-app/src/ItemsList.js"],"names":["React","Component","axios","Item","ItemsList","constructor","props","state","items","isLoaded","componentDidMount","config","headers","get","then","response","setState","data","catch","error","console","log","render","map","item","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,eAAe,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAE7CI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AAEHC,EAAAA,iBAAiB,GAAG;AAEhB,QAAIC,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACP,yBAAiB;AADV;AADE,KAAb;AAMAV,IAAAA,KAAK,CAACW,GAAN,CAAU,2CAAV,EAAuDF,MAAvD,EACGG,IADH,CACQC,QAAQ,IAAI;AAChB,WAAKC,QAAL,CAAc;AACZP,QAAAA,QAAQ,EAAC,IADG;AAEZD,QAAAA,KAAK,EAAEO,QAAQ,CAACE;AAFJ,OAAd;AAID,KANH,EAOGC,KAPH,CAOS,UAAUC,KAAV,EAAiB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KATH;AAWD;;AAGHG,EAAAA,MAAM,GAAG;AAAA,sBACmB,KAAKf,KADxB;AAAA,QACAE,QADA,eACAA,QADA;AAAA,QACUD,KADV,eACUA,KADV;;AAGL,QAAG,CAACC,QAAJ,EAAc;AACV,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAP;AACH,KAFD,MAEO;AACH,aAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKD,KAAK,CAACe,GAAN,CAAUC,IAAI,IACX,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEA,IAAI,CAACC,EAAhB;AAAoB,QAAA,IAAI,EAAED,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,CADL,MADF,CAHJ;AAaH;AAEN;;AAtD8C","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios';\nimport Item from './Item';\n\nexport default class ItemsList extends Component {\n  \n    constructor(props) {\n        super(props);\n    \n        this.state = {\n          items :[],\n          isLoaded: false\n        };\n      }\n      \n    componentDidMount() {\n\n        let config = {\n          headers: {\n            'Authorization': 'Bearer: 456645412 ' \n          }\n        }\n    \n        axios.get('http://jsonplaceholder.typicode.com/users', config)\n          .then(response => {\n            this.setState({\n              isLoaded:true,\n              items: response.data\n            }) \n          })\n          .catch(function (error) {\n            console.log(error);\n          }) \n    \n      }\n  \n  \n    render() {\n        var {isLoaded, items} = this.state;   \n        \n        if(!isLoaded) { \n            return <div>Data Loading..</div>;\n        } else {\n            return (\n        \n\n                <div>\n                  <ul>\n                      {items.map(item => (\n                          <Item key={item.id} item={item} />\n          \n                      ))};\n          \n                      </ul>\n                </div>\n              )\n        }  \n    \n  }\n}\n"]},"metadata":{},"sourceType":"module"}